#bar chart
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import style

x=['facebook','instagram','snapchat','whatsapp']
time=[120,60,70,30]
style.use('ggplot')
plt.figure(figsize=(10,5))
color=['blue','purple','red','yellow']
bars=plt.bar(x,time,color=color,width=0.8)
plt.title("AVERAGE TIME SPEND IN SOCIAL MEDIA")
plt.xlabel('social_medias')
plt.ylabel('time_spent')
# Add labels for legend
labels = ['Facebook', 'Instagram', 'YouTube', 'Snapchat']

# Add legend
plt.legend(bars, labels)

plt.show()
..................................................................................................................
#MULTIPLE BARCHART
#multiple barchart
import matplotlib.pyplot as plt
import numpy as np

# Sample data
categories = ['Category A', 'Category B', 'Category C', 'Category D']
values1 = [25, 30, 15, 40]
values2 = [20, 35, 25, 30]
values3 = [35,40,60,45]

# Set the width of the bars
bar_width = 0.25

# Set the positions of bars on X-axis for each category
bar1 = np.arange(len(categories))
bar2 = bar1 + bar_width
bar3= bar2+bar_width
# Plot the bars
plt.bar(bar1, values1, width=bar_width, label='Group 1')
plt.bar(bar2, values2, width=bar_width, label='Group 2')
plt.bar(bar3, values3, width=bar_width, label='Group 3')

# Set labels and title
plt.xlabel('Categories')
plt.ylabel('Values')
plt.title('Multiple Bar Graph')

# Set X-axis ticks and labels
plt.xticks(bar1 + bar_width / 2, categories)
# Display legend
plt.legend()

# Show the plot
plt.show()
.................................................................................................................
import numpy as np
import matplotlib.pyplot as plt

x=[10,20,30,40,50]
men = [22,30,35,35,26 ]  # Adjust the length to match the number of categories
women= [25,32,43,35,29]

bar_width = 0.35

bar1 = np.arange(len(x))
bar2 = bar1 + bar_width

plt.bar(bar1, men, width=bar_width, label='men')
plt.bar(bar2, women, width=bar_width, label='women')

style.use('ggplot')
plt.title('Marks of men and women')
plt.xlabel('gender')
plt.ylabel('marks')
plt.xticks(bar1 + bar_width / 2, x)
plt.legend()
plt.show()





